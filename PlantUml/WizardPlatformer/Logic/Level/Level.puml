@startuml
class Level {
    + {static} <<readonly>> RoomSize : Dictionary<int, int[]>
    - levelId : int
    - roomId : int
    - roomSizeId : int
    - roomWidth : int
    - roomHeigth : int
    - levelLoader : LevelLoader
    - background : Texture2D[]
    - tileSideSize : int
    - backLayer : Tile[,]
    - baseLayer : Tile[,]
    - decoLayer : Tile[,]
    - functionalLayer : Tile[,]
    - isTriggerOn : bool
    - currentOpacity : float
    - playerStartPosition : Point
    - player : EntityPlayer
    - entities : List<Entity>
    - tileEntities : List<Tile>
    + Level(levelId:int, roomId:int, levelLoader:LevelLoader, playerStartPosition:Point)
    + LoadContent(contentManager:ContentManager) : void
    + Update(gameTime:GameTime) : void
    + Draw(spriteBatch:SpriteBatch, gameTime:GameTime) : void
    - UpdateLayer(gameTime:GameTime, tileLayer:Tile[,], roomSizeId:int) : void
    - DrawLayer(spriteBatch:SpriteBatch, gameTime:GameTime, tileLayer:Tile[,], roomSizeId:int, opacity:float) : void
    - DrawBackground(spriteBatch:SpriteBatch, gameTime:GameTime, background:Texture2D[]) : void
    + GetTileLayerCoords(posX:float, posY:float) : Point
    + GetTileCoordsFromLayer(x:int, y:int) : Point
    + GetTile(posX:float, posY:float, layer:string) : Tile
    + DestroyTile(tile:Tile) : void
    + SpawnTileEntity(tile:Tile) : void
    + DespawnTileEntity(tile:Tile) : void
    - UpdateTileEntities(gameTime:GameTime) : void
    - DrawTileEntities(spriteBatch:SpriteBatch, gameTime:GameTime) : void
    + TileEntitiesList : List<Tile> <<get>>
    + <<virtual>> HandleTrigger() : void
    - RestoreTrigger() : void
    - UpdateLayersVisibility(gameTime:GameTime, opacitySpeed:float) : void
    + SpawnEntity(entity:Entity) : void
    + DespawnEntity(entity:Entity) : void
    + LoadEntitiesContent(contentManager:ContentManager) : void
    - UpdateEntities(gameTime:GameTime) : void
    - DrawEntities(spriteBatch:SpriteBatch, gameTime:GameTime) : void
    + EntitiesList : List<Entity> <<get>>
    + UpdateCameraPosition() : void
    + RoomWidth : int <<get>>
    + RoomHeigth : int <<get>>
}
@enduml
