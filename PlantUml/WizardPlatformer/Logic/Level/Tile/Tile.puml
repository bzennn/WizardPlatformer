@startuml
class Tile {
    - heatBox : Rectangle
    - heatBoxOffset : Vector2
    + tilePosition : Vector2
    - sprite : Texture2D
    - spritePosition : Vector2
    - spriteOffset : Vector2
    - spriteOnMap : Rectangle
    - tileSideSize : int
    - scaleFactor : int
    - collision : CollisionType
    - pass : PassType
    # drawDebugInfo : bool
    + Tile(texture:Texture2D, spritePos:Point, collision:CollisionType, pass:PassType, heatBoxWidth:int, heatBoxHeigth:int, heatBoxPosX:int, heatBoxPosY:int, posX:int, posY:int)
    + <<virtual>> Update(gameTime:GameTime) : void
    + <<virtual>> Draw(spriteBatch:SpriteBatch, gameTime:GameTime, opacity:float) : void
    - DrawDebugInfo(spriteBatch:SpriteBatch, gameTime:GameTime) : void
    + TilePosition : Vector2 <<get>> <<set>>
    + Collision : CollisionType <<get>> <<set>>
    + Pass : PassType <<get>>
    + HeatBox : Rectangle <<get>> <<set>>
    + HeatBoxOffset : Vector2 <<get>> <<set>>
    + DebugInfo : bool <<get>> <<set>>
}
enum CollisionType {
    PASSABLE,
    IMPASSABLE,
    PLATFORM,
}
enum PassType {
    REGULAR,
    HOSTILE,
}
Tile +-- CollisionType
Tile +-- PassType
@enduml
